export const getErrorCodesTranslations = t => {

  const errorCodesTranslations = t => ({
    CUBE_NOT_FOUND: t('errors.businessLogic.CUBE_NOT_FOUND'),
    CUBE_WITHOUT_LABEL: t('errors.businessLogic.CUBE_WITHOUT_LABEL'),
    CUBE_DUPLICATED_CODE: t('errors.businessLogic.CUBE_DUPLICATED_CODE'),
    CUBE_CATEGORY_NOT_DEFINED: t('errors.businessLogic.CUBE_CATEGORY_NOT_DEFINED'),
    CUBE_CATCUBE_INSERT_ERROR: t('errors.businessLogic.CUBE_CATCUBE_INSERT_ERROR'),
    CUBE_NO_LABELS: t('errors.businessLogic.CUBE_NO_LABELS'),
    CUBE_LABELS_CREATION: t('errors.businessLogic.CUBE_LABELS_CREATION'),
    CUBE_NO_DIM: t('errors.businessLogic.CUBE_NO_DIM'),
    CUBE_DIM_DUPLICATED_CODE: t('errors.businessLogic.CUBE_DIM_DUPLICATED_CODE'),
    CUBE_DIM_CREATE: t('errors.businessLogic.CUBE_DIM_CREATE'),
    CUBE_TIME_DIM_ERR: t('errors.businessLogic.CUBE_TIME_DIM_ERR'),
    CUBE_ATT_DUPLICATED_CODE: t('errors.businessLogic.CUBE_ATT_DUPLICATED_CODE'),
    CUBE_ATT_CREATE: t('errors.businessLogic.CUBE_ATT_CREATE'),
    CUBE_NO_MEAS: t('errors.businessLogic.CUBE_NO_MEAS'),
    CUBE_MEAS_DUPLICATED_CODE: t('errors.businessLogic.CUBE_MEAS_DUPLICATED_CODE'),
    CUBE_FACT_TABLE_CREATE: t('errors.businessLogic.CUBE_FACT_TABLE_CREATE'),
    CUBE_FILT_TABLE_CREATE: t('errors.businessLogic.CUBE_FILT_TABLE_CREATE'),
    CUBE_VIEW_DATA_CREATE: t('errors.businessLogic.CUBE_VIEW_DATA_CREATE'),
    CUBE_VIEW_ALL_SERIES_CREATE: t('errors.businessLogic.CUBE_VIEW_ALL_SERIES_CREATE'),
    CUBE_VIEW_DATAFACT_CREATE: t('errors.businessLogic.CUBE_VIEW_DATAFACT_CREATE'),
    CUBE_WITH_ASSOCIATED_DATAFLOWS: t('errors.businessLogic.CUBE_WITH_ASSOCIATED_DATAFLOWS'),
    CUBE_DELETE_ERROR: t('errors.businessLogic.CUBE_DELETE_ERROR'),
    CUBE_CREATE_ERROR: t('errors.businessLogic.CUBE_CREATE_ERROR'),
    CUBE_RETRIEVING_ERROR: t('errors.businessLogic.CUBE_RETRIEVING_ERROR'),
    CUBE_RETRIEVING_AV_ERROR: t('errors.businessLogic.CUBE_RETRIEVING_AV_ERROR'),
    DEF_CAT_SCHEME_EMPTY: t('errors.businessLogic.DEF_CAT_SCHEME_EMPTY'),
    DEF_CAT_SCHEME_ALREADY_EXISTS: t('errors.businessLogic.DEF_CAT_SCHEME_ALREADY_EXISTS'),
    DEF_CAT_SCHEME_IMPORT_ERROR: t('errors.businessLogic.DEF_CAT_SCHEME_IMPORT_ERROR'),
    DCS_RETRIEVING_ERROR: t('errors.businessLogic.DCS_RETRIEVING_ERROR'),
    MAPPINGS_RETRIEVING_ERROR: t('errors.businessLogic.MAPPINGS_RETRIEVING_ERROR'),
    MAPPING_NOT_EXISTENT: t('errors.businessLogic.MAPPING_NOT_EXISTENT'),
    MAPPING_EMPTY: t('errors.businessLogic.MAPPING_EMPTY'),
    MAPPING_CREATE_ERROR: t('errors.businessLogic.MAPPING_CREATE_ERROR'),
    MAPPING_CREATE_DUPLICATED_NAME: t('errors.businessLogic.MAPPING_CREATE_DUPLICATED_NAME'),
    MAPPING_CHECK_NOT_MAPPED_COMPONENT: t('errors.businessLogic.MAPPING_CHECK_NOT_MAPPED_COMPONENT'),
    UPLOAD_CSV_FILE_NULL_OR_EMPTY: t('errors.businessLogic.UPLOAD_CSV_FILE_NULL_OR_EMPTY'),
    FILE_FORMAT_UNSUPPORTED: t('errors.businessLogic.FILE_FORMAT_UNSUPPORTED'),
    CSV_HEADER_RETRIEVING_ERROR: t('errors.businessLogic.CSV_HEADER_RETRIEVING_ERROR'),
    CSV_PRELOAD: t('errors.businessLogic.CSV_PRELOAD'),
    SDMX_TO_CSV_FILE_CONVERTING: t('errors.businessLogic.SDMX_TO_CSV_FILE_CONVERTING'),
    LOADING_TEMP_TABLE_NOT_EXISTENT: t('errors.businessLogic.LOADING_TEMP_TABLE_NOT_EXISTENT'),
    LOADING_CSV_NOT_MATCHING_MAPPING: t('errors.businessLogic.LOADING_CSV_NOT_MATCHING_MAPPING'),
    FILE_IMPORT_ELAPSED_TIME: t('errors.businessLogic.FILE_IMPORT_ELAPSED_TIME'),
    FILE_IMPORT_NUM_ROWS: t('errors.businessLogic.FILE_IMPORT_NUM_ROWS'),
    FILE_IMPORT_NUM_SERIES: t('errors.businessLogic.FILE_IMPORT_NUM_SERIES'),
    FILE_IMPORT_FILE_NAME: t('errors.businessLogic.FILE_IMPORT_FILE_NAME'),
    FILE_IMPORT_DUPL_ROW: t('errors.businessLogic.FILE_IMPORT_DUPL_ROW'),
    FILE_IMPORT_DUPL_ROW_CONFL: t('errors.businessLogic.FILE_IMPORT_DUPL_ROW_CONFL'),
    FILE_IMPORT_WRONG_CROSS_REF: t('errors.businessLogic.FILE_IMPORT_WRONG_CROSS_REF'),
    FILE_IMPORT_WRONG_ATTRIBUTE: t('errors.businessLogic.FILE_IMPORT_WRONG_ATTRIBUTE'),
    FILE_IMPORT_NO_ASSOCIATED_SERIES: t('errors.businessLogic.FILE_IMPORT_NO_ASSOCIATED_SERIES'),
    IMPORT_DATA_IMPORT_TID: t('errors.businessLogic.IMPORT_DATA_IMPORT_TID'),
    IMPORT_DATA_IMPORT_NOT_CODED_ATTS: t('errors.businessLogic.IMPORT_DATA_IMPORT_NOT_CODED_ATTS'),
    IMPORT_DATA_IMPORT_NOT_CODED_DIMS: t('errors.businessLogic.IMPORT_DATA_IMPORT_NOT_CODED_DIMS'),
    IMPORT_DATA_CHECKING_DUPL_ROWS: t('errors.businessLogic.IMPORT_DATA_CHECKING_DUPL_ROWS'),
    IMPORT_DATA_CHECKING_WRONG_ATTRIBUTES: t('errors.businessLogic.IMPORT_DATA_CHECKING_WRONG_ATTRIBUTES'),
    IMPORT_DATA_CHECKING_WRONG_CROSS_REF: t('errors.businessLogic.IMPORT_DATA_CHECKING_WRONG_CROSS_REF'),
    IMPORT_DATA_MAX_NUM_WRONG_ROWS: t('errors.businessLogic.IMPORT_DATA_MAX_NUM_WRONG_ROWS'),
    IMPORT_DATA_CHECKING_NO_SERIES_ROWS: t('errors.businessLogic.IMPORT_DATA_CHECKING_NO_SERIES_ROWS'),
    IMPORT_DATA_CHECKING_TID_UNIQUENESS: t('errors.businessLogic.IMPORT_DATA_CHECKING_TID_UNIQUENESS'),
    IMPORT_DATA_LOADING_SERIES: t('errors.businessLogic.IMPORT_DATA_LOADING_SERIES'),
    IMPORT_DATA_LOADING_DATA: t('errors.businessLogic.IMPORT_DATA_LOADING_DATA'),
    IMPORT_DATA_CREATING_SERIES_VIEW: t('errors.businessLogic.IMPORT_DATA_CREATING_SERIES_VIEW'),
    IMPORT_DATA_CREATING_TEMP_TABLE_VIEW: t('errors.businessLogic.IMPORT_DATA_CREATING_TEMP_TABLE_VIEW'),
    GET_TABLE_PREVIEW: t('errors.businessLogic.GET_TABLE_PREVIEW'),
    GET_TABLE_COLUMN_PREVIEW: t('errors.businessLogic.GET_TABLE_COLUMN_PREVIEW'),
    UPLOAD_FILE_ON_SERVER: t('errors.businessLogic.UPLOAD_FILE_ON_SERVER'),
    CUBE_DUPL_COMP_CODES: t('errors.businessLogic.CUBE_DUPL_COMP_CODES'),
    DF_RETRIEVING_DFS_ERROR: t('errors.businessLogic.DF_RETRIEVING_DFS_ERROR'),
    DF_RETRIEVING_ERROR: t('errors.businessLogic.DF_RETRIEVING_ERROR'),
    DF_NOT_FOUND: t('errors.businessLogic.DF_NOT_FOUND'),
    DF_WITHOUT_LABEL: t('errors.businessLogic.DF_WITHOUT_LABEL'),
    DF_DUPLICATED_CODE: t('errors.businessLogic.DF_DUPLICATED_CODE'),
    DF_CATDF_INSERT_ERROR: t('errors.businessLogic.DF_CATDF_INSERT_ERROR'),
    DF_NO_LABELS: t('errors.businessLogic.DF_NO_LABELS'),
    DF_LABELS_CREATION: t('errors.businessLogic.DF_LABELS_CREATION'),
    DF_NO_COLS: t('errors.businessLogic.DF_NO_COLS'),
    DF_COL_CREATE: t('errors.businessLogic.DF_COL_CREATE'),
    DF_DELETE_ERROR: t('errors.businessLogic.DF_DELETE_ERROR'),
    DF_UNK_COLS: t('errors.businessLogic.DF_UNK_COLS'),
    MAND_ATTR_NULL: t('errors.businessLogic.MAND_ATTR_NULL'),
    DF_FILTER_MISS_COND: t('errors.businessLogic.DF_FILTER_MISS_COND'),
    DF_FILTER: t('errors.businessLogic.DF_FILTER'),
    NSI_WS_GET_ARTEFACT: t('errors.businessLogic.NSI_WS_GET_ARTEFACT'),
    NSI_WS_DF_UNCORRECT: t('errors.businessLogic.NSI_WS_DF_UNCORRECT'),
    SDMXML_PRELOAD: t('errors.businessLogic.SDMXML_PRELOAD'),
    DF_CREATE_ERROR: t('errors.businessLogic.DF_CREATE_ERROR'),
    GET_CONNECTION_STRING: t('errors.businessLogic.GET_CONNECTION_STRING'),
    DSD_WITH_ASSOCIATED_CUBES_OR_DF: t('errors.businessLogic.DSD_WITH_ASSOCIATED_CUBES_OR_DF'),
    COL_NOT_IN_CUBE: t('errors.businessLogic.COL_NOT_IN_CUBE'),
    ERR_TRANSCODING: t('errors.businessLogic.ERR_TRANSCODING'),
    DF_TRANSC_FLAG: t('errors.businessLogic.DF_TRANSC_FLAG'),
    CONFIG_GET_ERROR: t('errors.businessLogic.CONFIG_GET_ERROR'),
    CONFIG_SET_ERROR: t('errors.businessLogic.CONFIG_SET_ERROR'),
    CONFIG_NODE_NOT_FOUND: t('errors.businessLogic.CONFIG_NODE_NOT_FOUND'),
    DF_PROD_SET: t('errors.businessLogic.DF_PROD_SET'),
    DF_PROD_SET_TRANSC: t('errors.businessLogic.DF_PROD_SET_TRANSC'),
    DF_UPDATE_IN_PROD: t('errors.businessLogic.DF_UPDATE_IN_PROD'),
    DF_UPDATE_ERROR: t('errors.businessLogic.DF_UPDATE_ERROR'),
    DF_VIEW_DATA_CREATE: t('errors.businessLogic.DF_VIEW_DATA_CREATE'),
    DF_PROD_REM: t('errors.businessLogic.DF_PROD_REM'),
    NODE_Sdmx21_CONNECTION_ERROR: t('errors.businessLogic.NODE_Sdmx21_CONNECTION_ERROR'),
    NODE_DmApi_CONNECTION_ERROR: t('errors.businessLogic.NODE_DmApi_CONNECTION_ERROR'),
    NODE_MaApi_CONNECTION_ERROR: t('errors.businessLogic.NODE_MaApi_CONNECTION_ERROR'),
    NODE_DmApi_NOT_FOUND: t('errors.businessLogic.NODE_DmApi_NOT_FOUND'),
    CONFIG_NODE_SESSION_NOT_FOUND: t('errors.businessLogic.CONFIG_NODE_SESSION_NOT_FOUND'),
    IMPORTXML_FILENOTFOUND: t('errors.businessLogic.IMPORTXML_FILENOTFOUND'),
    IMPORTXML_FINAL_ARTEFACT_ERROR: t('errors.businessLogic.IMPORTXML_FINAL_ARTEFACT_ERROR'),
    FILE_UPLOAD_FORMAT: t('errors.businessLogic.FILE_UPLOAD_FORMAT'),
    DMAPI_NOTCONFIGURATED: t('errors.businessLogic.DMAPI_NOTCONFIGURATED'),
    MAAPI_NOTCONFIGURATED: t('errors.businessLogic.MAAPI_NOTCONFIGURATED'),
    NSIAPI_MAAPI_DIFFERENT_DB: t('errors.businessLogic.NSIAPI_MAAPI_DIFFERENT_DB'),
    MASID_INVALID: t('errors.businessLogic.MASID_INVALID'),
    IMPORTCSVITEM_FILE_READERROR: t('errors.businessLogic.IMPORTCSVITEM_FILE_READERROR'),
    IMPORTCSVITEM_FILE_DATAERROR: t('errors.businessLogic.IMPORTCSVITEM_FILE_DATAERROR'),
    IMPORTCSVITEM_FILE_IDERROR: t('errors.businessLogic.IMPORTCSVITEM_FILE_IDERROR'),
    IMPORTCSVITEM_FILE_NAMEERROR: t('errors.businessLogic.IMPORTCSVITEM_FILE_NAMEERROR'),
    USER_NOT_PRESENT: t('errors.businessLogic.USER_NOT_PRESENT'),
    ARTEFACTS_EMPTY: t('errors.businessLogic.ARTEFACTS_EMPTY'),
    SEARCH_METADATASET_ERROR: t('errors.businessLogic.SEARCH_METADATASET_ERROR'),
    GET_METADATASET_ERROR: t('errors.businessLogic.GET_METADATASET_ERROR'),
    SEARCH_REPORT_ERROR: t('errors.businessLogic.SEARCH_REPORT_ERROR'),
    GET_MSD_FOR_REPORT: t('errors.businessLogic.GET_MSD_FOR_REPORT'),
    GET_REPORT_ERROR: t('errors.businessLogic.GET_REPORT_ERROR'),
    UPDATE_METADATASET_ERROR: t('errors.businessLogic.UPDATE_METADATASET_ERROR'),
    UPDATE_REPORT_ERROR: t('errors.businessLogic.UPDATE_REPORT_ERROR'),
    CREATE_METADATASET_ERROR: t('errors.businessLogic.CREATE_METADATASET_ERROR'),
    UPSERT_REPORT_ERROR: t('errors.businessLogic.UPSERT_REPORT_ERROR'),
    DELETE_METADATASET_ERROR: t('errors.businessLogic.DELETE_METADATASET_ERROR'),
    DELETE_REPORT_ERROR: t('errors.businessLogic.DELETE_REPORT_ERROR'),
    SUPERUSER_PASSWORD_NOTMATCH: t('errors.businessLogic.SUPERUSER_PASSWORD_NOTMATCH'),
    NODE_ID_NOT_FOUND: t('errors.businessLogic.NODE_ID_NOT_FOUND'),
    INVALID_AUTHDB_CONFIGURATION: t('errors.businessLogic.INVALID_AUTHDB_CONFIGURATION'),
    DDB_CONFIG_ERROR: t('errors.businessLogic.DDB_CONFIG_ERROR'),
    CHECKAUTHDB_UNKNOW_ERROR: t('errors.businessLogic.CHECKAUTHDB_UNKNOW_ERROR'),
    DATAFLOW_DOWNLOAD_NOTINPRODUCTION: t('errors.businessLogic.DATAFLOW_DOWNLOAD_NOTINPRODUCTION'),
    DATAFLOW_DOWNLOAD_NOTFOUND: t('errors.businessLogic.DATAFLOW_DOWNLOAD_NOTFOUND'),
    DATAFLOW_DOWNLOAD_MA_NOTFOUND: t('errors.businessLogic.DATAFLOW_DOWNLOAD_MA_NOTFOUND'),
    DF_WITH_ASSOCIATED_DDB_DF: t('errors.businessLogic.DF_WITH_ASSOCIATED_DDB_DF'),
    DDBRESET_ERROR: t('errors.businessLogic.DDBRESET_ERROR'),
    DEL_CONT_CONSTRAINTS: t('errors.businessLogic.DEL_CONT_CONSTRAINTS'),
    ERR_GEN_CONT_CONSTRAINTS: t('errors.businessLogic.ERR_GEN_CONT_CONSTRAINTS'),
    DF_CC_FLAG: t('errors.businessLogic.DF_CC_FLAG'),
    DF_TRANSC_REM: t('errors.businessLogic.DF_TRANSC_REM'),
    WSDL_NOT_FOUND: t('errors.businessLogic.WSDL_NOT_FOUND'),
    DF_MS_SET: t('errors.businessLogic.DF_MS_SET'),
    DF_MS_REM: t('errors.businessLogic.DF_MS_REM'),
    FINAL_ARTEFACTS_EXIST: t('errors.businessLogic.FINAL_ARTEFACTS_EXIST'),
    ITEM_DUPLICATE: t('errors.businessLogic.ITEM_DUPLICATE'),
    CANT_DELETE_ITEM_WITH_CHILDREN: t('errors.businessLogic.CANT_DELETE_ITEM_WITH_CHILDREN'),
    CATEGORYSCHEME_WITH_CATEGORIZATION: t('errors.businessLogic.CATEGORYSCHEME_WITH_CATEGORIZATION'),
    DATAFLOW_DOWNLOAD_MISSING_MAPPINGSET: t('errors.businessLogic.DATAFLOW_DOWNLOAD_MISSING_MAPPINGSET'),
    DF_WITH_ASSOCIATED_METADATA: t('errors.businessLogic.DF_WITH_ASSOCIATED_METADATA'),
    SWITCHING_FACT_TABLES: t('errors.businessLogic.SWITCHING_FACT_TABLES'),
    DISEMBARGO_CUBE: t('errors.businessLogic.DISEMBARGO_CUBE'),
    DUPL_ROWS_UNRES_CONFLICT: t('errors.businessLogic.DUPL_ROWS_UNRES_CONFLICT'),
    UPGRADECUBE_ERROR: t('errors.businessLogic.UPGRADECUBE_ERROR'),
    IMPORTCSVITEM_FILE_HEADER_IDERROR: t('errors.businessLogic.IMPORTCSVITEM_FILE_HEADER_IDERROR'),
    IMPORTCSVITEM_FILE_HEADER_NAMEERROR: t('errors.businessLogic.IMPORTCSVITEM_FILE_HEADER_NAMEERROR'),
    COMPAREITEMS_DIFFERENT_TYPE: t('errors.businessLogic.COMPAREITEMS_DIFFERENT_TYPE'),
    COMPAREITEMS_SOURCETOOMANY: t('errors.businessLogic.COMPAREITEMS_SOURCETOOMANY'),
    COMPAREITEMS_TARGETTOOMANY: t('errors.businessLogic.COMPAREITEMS_TARGETTOOMANY'),
    DELETE_METADATASET_WITH_REPORT: t('errors.businessLogic.DELETE_METADATASET_WITH_REPORT'),
    METADATAFLOW_WITH_ASSOCIATED_METADATASET: t('errors.businessLogic.METADATAFLOW_WITH_ASSOCIATED_METADATASET'),
    NODE_FORBIDDEN: t('errors.businessLogic.NODE_FORBIDDEN'),
    NODE_UNAUTHORIZED: t('errors.businessLogic.NODE_UNAUTHORIZED'),
    EMPTY_CUBE: t('errors.businessLogic.EMPTY_CUBE'),
    LOAD_GEN_COMPLEX_REPORT: t('errors.businessLogic.LOAD_GEN_COMPLEX_REPORT'),
    GENERATEREPORTDSD_TARGETNOTFOUND: t('errors.businessLogic.GENERATEREPORTDSD_TARGETNOTFOUND'),
    GENERATEREPORTDSD_SOURCENOTFOUND: t('errors.businessLogic.GENERATEREPORTDSD_SOURCENOTFOUND'),
    NOTFOUNDTARTEFACT: t('errors.businessLogic.NOTFOUNDTARTEFACT'),
    DERIVED_CODELIST_REMOVE_ITEM: t('errors.businessLogic.DERIVED_CODELIST_REMOVE_ITEM'),
    DCS_CATEGORYNOTFOUND: t('errors.businessLogic.DCS_CATEGORYNOTFOUND'),
    DCS_UPDATE_PARENTNOTFOUND: t('errors.businessLogic.DCS_UPDATE_PARENTNOTFOUND'),
    DCS_DELETE_CATWITHCHILDREN: t('errors.businessLogic.DCS_DELETE_CATWITHCHILDREN'),
    DCS_DELETE_CATWITHCUBES: t('errors.businessLogic.DCS_DELETE_CATWITHCUBES'),
    DCS_DELETE_ERROR: t('errors.businessLogic.DCS_DELETE_ERROR'),
    LOADING_CONCURRENT_UPLOAD_SAME_CUBE: t('errors.businessLogic.LOADING_CONCURRENT_UPLOAD_SAME_CUBE'),
    DRAFT_REPORT_PUBLICATION: t('errors.businessLogic.DRAFT_REPORT_PUBLICATION'),
    DCS_UPDATE_CATEGORYNOTFOUND: t('errors.businessLogic.DCS_UPDATE_CATEGORYNOTFOUND'),
    DCS_UPDATE_ERROR: t('errors.businessLogic.DCS_UPDATE_ERROR'),
    DCS_INSERT_DUPLICATECODE: t('errors.businessLogic.DCS_INSERT_DUPLICATECODE'),
    DCS_INSERT_PARENTNOTFOUND: t('errors.businessLogic.DCS_INSERT_PARENTNOTFOUND'),
    DCS_INSERT_ERROR: t('errors.businessLogic.DCS_INSERT_ERROR'),
    DSD_WITH_NON_FINAL_ARTEFACTS: t('errors.businessLogic.DSD_WITH_NON_FINAL_ARTEFACTS'),
    CUBE_ATTDSLEV_TABLE_CREATE: t('errors.businessLogic.CUBE_ATTDSLEV_TABLE_CREATE'),
    IMPORT_DS_LEV_ATTRIBUTES: t('errors.businessLogic.IMPORT_DS_LEV_ATTRIBUTES'),
    ATTS_UNRES_CONFLICT: t('errors.businessLogic.ATTS_UNRES_CONFLICT'),
    FILE_IMPORT_WRONG_CODED_OBS_VALUE: t('errors.businessLogic.FILE_IMPORT_WRONG_CODED_OBS_VALUE'),
    IMPORT_DATA_CHECKING_CODED_OBS_VALUE: t('errors.businessLogic.IMPORT_DATA_CHECKING_CODED_OBS_VALUE'),
    MASID_NOTPRESENT: t('errors.businessLogic.MASID_NOTPRESENT'),
    AGENCY_ALREADY_IN_CONFIG: t('errors.businessLogic.AGENCY_ALREADY_IN_CONFIG'),
    UNAUTHORIZED: t('errors.statusCodes.401'),
    FORBIDDEN: t('errors.statusCodes.403')
  });

  return errorCodesTranslations(t !== undefined ? t : str => str);
};
