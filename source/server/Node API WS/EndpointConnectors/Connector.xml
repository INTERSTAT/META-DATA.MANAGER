<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Connector</name>
    </assembly>
    <members>
        <member name="M:EndpointConnectors.XmlMessage.GetSubmitStructureXmlMessage(System.String,Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.String)">
            <summary>
            Get SubmitStructure Xml Message.
            </summary>
            <param name="type">SOAP or REST</param>
            <param name="sdmxObj">SdmxObjects to be placed in the message.</param>
            <param name="action">Type of action: Replace or Delete.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.XmlMessage.GetSubmitStructureXmlTemplate(System.String,System.String)">
            <summary>
            Get SubmitStructure template.
            </summary>
            <param name="type">SOAP or REST</param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.XmlMessage.AddEnvelopeToSdmxQuery(System.Xml.XmlDocument,System.String,System.String,System.String)">
            <summary>
            Adds Envelope to SdmxQuery
            </summary>
            <param name="query">XmlDocument containing query to be enveloped.</param>
            <param name="operation">Operation to be performed through the query.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.XmlMessage.GetRequestQueryMessageXml(Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureEnumType,System.String,System.String,System.String,System.String,System.String,System.String,Org.Sdmxsource.Sdmx.Api.Constants.StructureReferenceDetailEnumType)">
            <summary>
            Get XmlQueryMessage for getting SDMX artefacts.
            </summary>
            <param name="artefact">Artefact type.</param>
            <param name="id">Artefact id.</param>
            <param name="agencyID">Artefact agency.</param>
            <param name="version">Artefact version.</param>
            <param name="operation">Operation to be performed through the query.</param>
            <param name="refDetail">Reference detail: eg. None, Children, Parents (default = None).</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.XmlMessage.getTemplate(Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureEnumType)">
            <summary>
            Get XmlTemplate for the artefact type given.
            </summary>
            <param name="operation"></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.XmlMessage.SetKey(System.Xml.XmlDocument@,System.String,System.String,System.String)">
            <summary>
            Set id, agency and version for the query or replace the corrispondent xml node.
            </summary>
            <param name="xDom">XML document containing the query.</param>
            <param name="id">Artefact id.</param>
            <param name="agency">Artefact agency.</param>
            <param name="version">Artefact version.</param>
        </member>
        <member name="M:EndpointConnectors.XmlMessage.SetReferenceDetail(System.Xml.XmlDocument@,Org.Sdmxsource.Sdmx.Api.Constants.StructureReferenceDetailEnumType)">
            <summary>
            Set the reference detail for the query.
            </summary>
            <param name="xDom">XML document containing the query.</param>
            <param name="refDetail">Reference deatil. Eg. None, Children, Parent, etc.</param>
        </member>
        <member name="M:EndpointConnectors.XmlMessage.GetNamespaceManager(System.Xml.XmlDocument)">
            <summary>
            Get NameSpaceManager for the document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.XmlMessage.SetReturnDetail(System.Xml.XmlDocument@,System.String)">
            <summary>
            Set the return detail for the query, i.e. Full or Stub.
            </summary>
            <param name="xDom">XML document containing the query.</param>
            <param name="value">Return deatil (Full or Stub).</param>
        </member>
        <member name="M:EndpointConnectors.XmlMessage.GetXmlStructure(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
            Get XML structure from SDMX Objects.
            </summary>
            <param name="sdmxObj"></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.XmlMessage.GetXMLDocFromSdmxObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,Org.Sdmxsource.Sdmx.Api.Constants.StructureOutputFormatEnumType)">
            <summary>
            Get XMLDocument from SDMX Objects and a specific version.
            </summary>
            <param name="sdmxObjects"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetCube(System.Nullable{System.Int32})">
            <summary>
            Returns one or all available cubes.
            </summary>
            <param name="id">Cube id. Not specified for getting all cubes.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetDcs">
            <summary>
            Returns default category scheme.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.CreateCube(System.String)">
            <summary>
            Creates a new cube.
            </summary>
            <param name="cube">JSON string containing the cube.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.DeleteCube(System.Int32)">
            <summary>
            Deletes a cube.
            </summary>
            <param name="id">Id of the cube to be deleted.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.ImportDCS(System.String,System.String)">
            <summary>
            Imports default category scheme.
            </summary>
            <param name="categoryScheme">SDMX-JSON containing category scheme to be imported.</param>
            <param name="agencyId">Agency id of the category scheme to be imported.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.CreateFileMapping(System.String)">
            <summary>
            Creates a new file mapping.
            </summary>
            <param name="fileMapping">JSON string containing the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.DeleteFileMapping(System.Int32)">
            <summary>
            Deletes a file mapping.
            </summary>
            <param name="id">Id of the  mapping to be deleted.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetFileMapping(System.Nullable{System.Int32})">
            <summary>
            Returns one or all available file mappings.
            </summary>
            <param name="id">File Mapping id. Not specified for getting all file mappings.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetCSVHeader(System.Char,System.Boolean,System.String)">
            <summary>
            Gets header of a csv file.
            </summary>
            <param name="separator">Separator of the csv file.</param>
            <param name="hasHeader">True if the file has a header, false otherwise.</param>
            <param name="filePath">Path of the file from whom to get the header.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.ImportCSVData(System.Char,System.Boolean,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Imports a CSV file in a cube's FactS and FiltS tables.
            </summary>
            <param name="separator">Separator of the csv file.</param>
            <param name="hasHeader">True if the file has a header, false otherwise.</param>
            <param name="importType">Import type: Series, Data or SeriesAndData</param>
            <param name="cubeId">Id of the cube in whom to import the data.</param>
            <param name="mappingId">Id of the mapping associated to the file to be imported.</param>
            <param name="filePath">Path of the file to import.</param>
            <param name="tid">Tid for the cube.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.ImportSDMXMLData(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Imports a SDMX-ML file in a cube's FactS and FiltS tables.
            </summary>
            <param name="importType">Import type: Series, Data or SeriesAndData</param>
            <param name="cubeId">Id of the cube in whom to import the data.</param>
            <param name="dsdXml">Xml string of the dsd associated to the cube.</param>
            <param name="dsdAgencyId">Agency id of the dsd associated to the cube.</param>
            <param name="filePath">Path of the file to import.</param>
            <param name="tid">Tid</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetDDBDataflow(System.Nullable{System.Int32})">
            <summary>
            Returns one or all available ddb dataflows.
            </summary>
            <param name="id">Dataflow id. Not specified for getting all dataflows.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.CreateDDBDataflow(System.String)">
            <summary>
            Creates a new ddb dataflow.
            </summary>
            <param name="df">JSON string containing the ddb dataflow.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.DeleteDDBDataflow(System.Int32)">
            <summary>
            Deletes a ddb dataflow.
            </summary>
            <param name="id">Id of the ddb dataflow to be deleted.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.UploadFileOnServer(System.Nullable{System.Int32},Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Uploads file on file system.
            </summary>
            <param name="cubeId">Id of the cube to whom the file refers.</param>
            <param name="file">File to be uploaded.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetCSVTablePreview(DataModel.OptionsTable,System.Char,System.Boolean,System.String,System.String)">
            <summary>
            Gets a DataTable preview from a csv file.
            </summary>
            <param name="optionsTable">Contains Number of page for paging and Page size for paging.</param>
            <param name="separator">Separator of the csv file.</param>
            <param name="hasHeader">True if the file has a header, false otherwise.</param>
            <param name="filePath">Path of the file from whom to get the preview.</param>
            <param name="tid">Tid for the file.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetSDMXMLTablePreview(System.String,System.String,DataModel.OptionsTable,System.String)">
            <summary>
            Gets a DataTable preview from a sdmxml file.
            </summary>
            <param name="dsdXml">Xml string of the dsd associated to the cube.</param>
            <param name="agencyId">Agency id of the dsd associated to the cube.</param>
            <param name="optionsTable">Contains Number of page for paging and Page size for paging.</param>
            <param name="filePath">Path of the file from whom to get the preview.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetCSVTableColumnPreview(DataModel.OptionsTable,System.Char,System.Boolean,System.String)">
            <summary>
            Gets a DataColumn preview from a csv file.
            </summary>
            <param name="optionsTable">Name of the column to get in preview, Number of page for paging, Page size for paging</param>
            <param name="separator">Separator of the csv file.</param>
            <param name="hasHeader">True if the file has a header, false otherwise.</param>
            <param name="filePath">Path of the file from whom to get the preview.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetTablePreview(System.String,DataModel.OptionsTable)">
            <summary>
            Gets a DataTable preview from a table in DDB.
            </summary>
            <param name="tableName">Name of the table to get in preview.</param>
            <param name="optionsTable">Contains Number of page for paging and Page size for paging.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetTableColumnPreview(System.String,DataModel.OptionsTable)">
            <summary>
            Gets a DataTable preview from a column of a table in DDB.
            </summary>
            <param name="tableName">Name of the table to get in preview.</param>
            <param name="optionsTable">Name of the column of the table to get in preview, Number of page for paging, Page size for paging.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetDataflowColumnPreview(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets a DataTable preview from a column of a DDB Dataflow.
            </summary>
            <param name="df">JSON serialization of the dataflow.</param>
            <param name="colName">Name of the column of the table to get in preview.</param>
            <param name="pageNum">Number of page for paging.</param>
            <param name="pageSize">Page size for paging.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetDDBDataflowPreview(System.String,System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Gets a DataTable preview from a dataflow in DDB.
            </summary>
            <param name="selCols">Columns of the dataflow to be shown.</param>
            <param name="idCube">Id of the cube to whom the dataflow refers.</param>
            <param name="filter">Filter for the dataflow.</param>
            <param name="numPage">Number of page for paging.</param>
            <param name="pageSize">Page size for paging.</param>
            <param name="sortCols">The list of columns for order data</param>
            <param name="orderByDesc">specific if sort by desc or asc</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.DownloadDDBDataflowCsvZippedAsync(System.String,System.Int32,System.String)">
            <summary>
            Get a dataflow in CSV format according with the given parameters.
            </summary>
            <param name="selCols">The list of columns of the dataflow to be downloaded.</param>
            <param name="idCube">The id of the cube associated to the dataflow.</param>
            <param name="filter">A filter to be applied on the dataflow.</param>
            <returns>Return a MemoryStream with csv file</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.CheckAuthDB(System.String,System.String)">
            <summary>
            Checks if the XML Config and AuthDB Connection string have the identical value, if MA Sid have the same Sid and same connection string of MSDB on AuthDB
            </summary>
            <returns>Returns an object contain status config and a list of error mesage</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.InizializeAuthDb(System.String,System.String)">
            <summary>
            Calls DMApi for configure the connection string in AuthDb, if the AuthDb already configure and try to save a different connection string, return false
            </summary>
            <param name="msdbConn">Connection string for msdb (without password)</param>
            <param name="maSid">MAS Sid</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EndpointConnectors.Connectors.IDmApiConnector.LoginUser(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:EndpointConnectors.Connectors.IDmApiConnector.CreateUser(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:EndpointConnectors.Connectors.IDmApiConnector.EditUser(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:EndpointConnectors.Connectors.IDmApiConnector.DeleteUser(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:EndpointConnectors.Connectors.IDmApiConnector.GetCategoryHierarchy" -->
        <!-- Badly formed XML comment ignored for member "M:EndpointConnectors.Connectors.IDmApiConnector.GetCubeHierarchy" -->
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetMaSid">
            <summary>
            Return the MaSid configurated on AuthDb
            </summary>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.GetItemsCodelist(System.Collections.Generic.List{System.String})">
            <summary>
            Return the list of codelist to be sync for each dsd
            </summary>
            <returns>List of DSD with all CodeList and Items to be sync</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IDmApiConnector.SyncCodeList(DataModel.CheckCodeListResult)">
            <summary>
            Sync codelist from MSDB to DDB. Insert all Items from MSDB to DDB (only insert operation, not remove the code not present in MSDB)
            </summary>
            <param name="checkCodeListResult">Codelist to sync</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.GetEntity(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns a Mapping Assistant entity.
            </summary>
            <param name="type">Entity type: ddb, mappingset, dataset, column, localCode, column_description, mapping, transcoding, 
            transcodingRule, header_template, registry, user, userAction, templateMapping</param>
            <param name="id">Entity id.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.DeleteEntity(System.String,System.Int32)">
            <summary>
            Deletes a Mapping Assistant entity.
            </summary>
            <param name="type">Entity type: ddb, mappingset, dataset, column, localCode, column_description, mapping, transcoding, 
            transcodingRule, header_template, registry, user, userAction, templateMapping</param>
            <param name="id">Entity id.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.CreateDDBConnection(MA.Entities.DDBConnection)">
            <summary>
            Creates a DDB Connection.
            </summary>
            <param name="conn">The connection to be created.</param>
            <returns>The WS response.</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.CreateDataset(MA.Entities.Dataset)">
            <summary>
            Creates a Dataset.
            </summary>
            <param name="ds">The dataset to be created.</param>
            <returns>The WS response.</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.CreateDatasetColumns(System.String[],System.Int32)">
            <summary>
            Creates some DatasetColumns.
            </summary>
            <param name="dc">An array containing the names of the columns to be created.</param>
            <param name="dsId">Id of the dataset to whom the columns belong.</param>
            <returns>The WS response.</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.CreateMappingSet(MA.Entities.MappingSet)">
            <summary>
            Creates a MappingSet.
            </summary>
            <param name="ms">The mapping set to be created.</param>
            <returns>The WS response.</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.CreateMappings(MA.Entities.GenericMapping[])">
            <summary>
            Creates some Mappings.
            </summary>
            <param name="mapp">An array containing the mappings to be created.</param>
            <returns>The WS response.</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.CreateTranscodings(MA.Entities.Transcoding[])">
            <summary>
            Creates some Transcodings.
            </summary>
            <param name="tr">An array containing the transcodings to be created.</param>
            <returns>The WS response.</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.CreateTranscodingRules(System.Collections.Generic.List{MA.Entities.MaRule})">
            <summary>
            Creates some Transcoding Rules.
            </summary>
            <param name="rules">A list containing the transcoding rules to be created.</param>
            <returns>The WS response.</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.CreateHeaderTemplate(MA.Entities.HeaderTemplate)">
            <summary>
            Creates a Header Template.
            </summary>
            <param name="hr">The header template to be created.</param>
            <returns>The WS response.</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.GetListMaSid">
            <summary>
            Gets all connections string avaiable for MSDB.
            </summary>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.GetMAConnectionString(System.String)">
            <summary>
            Gets detail of specific maSid.
            </summary>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.CheckExistsArtefact(System.String,System.String,System.String,System.String)">
            <summary>
            Checks if an artefact exists.
            </summary>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.InizializeAuthDb">
            <summary>
            Inizializes AuthDb (creating table and popolating them with default values)
            </summary>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.IMaApiConnector.IsAuthDbInizialize">
            <summary>
            Checks if AuthDb was initialized.
            </summary>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.ISdmx21Connector.GetArtefacts(Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureEnumType,System.String,System.String,System.String,Org.Sdmxsource.Sdmx.Api.Constants.StructureReferenceDetailEnumType)">
            <summary>
            Gets an artefact from the MSDB.
            </summary>
            <param name="artefact">Artefact type.</param>
            <param name="id">Artefact id.</param>
            <param name="agencyID">Artefact agency.</param>
            <param name="version">Artefact version.</param>
            <param name="refDetail">Reference detail: eg. None, Children, Parents (default = None).</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.ISdmx21Connector.CreateArtefacts(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean)">
            <summary>
            Creates new artefacts in the MSDB from the ISdmxObjectes given. (or update if exist)
            </summary>
            <param name="objs">SdmxObject containing the SDMX artefacts to be created.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.ISdmx21Connector.UpdateArtefacts(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean)">
            <summary>
            Updates artefacts in the MSDB from the ISdmxObjectes given. (or create if not exist)
            </summary>
            <param name="objs">SdmxObject containing the SDMX artefacts to be updated.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.ISdmx21Connector.DeleteArtefact(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean)">
            <summary>
            Deletes artefacts from the MSDB.
            </summary>
            <param name="objs">SdmxObject containing the SDMX artefacts to be deleted.</param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.ISdmx21Connector.PingEndPoint">
            <summary>
            Check if endpoint is up
            </summary>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.ISdmx21Connector.CheckImportedFileXmlSdmxObjects(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Check validity of file xml and data
            </summary>
            <param name="filePath">File uploaded</param>
            <returns>All status of item to be imported</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.ISdmx21Connector.ExecuteImportXml(System.Collections.Generic.List{NSI.Entities.ImportedItemXml},System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Import data 
            </summary>
            <param name="importedItem">List of item to be imported</param>
            <returns>All status of item imported</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.ISdmx21Connector.ExecuteImportCsv(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
            Import data csv
            </summary>
            <param name="sdmxObjects">Object to update</param>
            <returns>Status of item</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.DmApiConnector.IsAuthDBConfigurated">
            <summary>
            Check if AuthDb have the connection string inizializated
            </summary>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="F:EndpointConnectors.Connectors.Sdmx21Connector.namespaceMessage">
            <summary>
            The HTTP HEADER Content type value
            </summary>
        </member>
        <member name="M:EndpointConnectors.Connectors.Sdmx21Connector.SendRequest(System.Net.Http.HttpRequestMessage)">
            <summary>
            Sends a soap request. And return Execption in case of error
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.Sdmx21Connector.SendRequestWithoutErrorException(System.Net.Http.HttpRequestMessage)">
            <summary>
            Sends a soap request and return message of the response
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.Sdmx21Connector.ConvertToBytes(System.Xml.XmlDocument)">
            <summary>
            Convert an XmlDocument to an array of bytes.
            </summary>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.Sdmx21Connector.LoadSdmxObjects(System.Xml.XmlDocument)">
            <summary>
            Parses an a XmlDocument and get SdmxObjects contained in it.
            </summary>
            <param name="xDomSource"></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.Sdmx21Connector.GetSdmxObjectsFromFileXML(System.String)">
            <summary>
            Create a ISdmxObjects from File XML
            </summary>
            <param name="filePath"></param>
            <returns>Path of file</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.Sdmx21Connector.CheckAllObjectItem(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Collections.Generic.List{System.String})">
            <summary>
            Check all item in SdmxObjects and return a status (importable or not)
            </summary>
            <param name=""></param>
            <returns>List of all item and status</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.Sdmx21Connector.SetStatusItem(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject,System.Collections.Generic.List{NSI.Entities.ImportedItemXml},Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureEnumType,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Check if the item is importable. 
            Remove if it does not belong to the user's agency
            </summary>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.Sdmx21Connector.ExecuteImportXml(System.Collections.Generic.List{NSI.Entities.ImportedItemXml},System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Run the import from File XML
            </summary>
            <param name=""></param>
            <returns>List of all item and status</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.Sdmx21Connector.getNsiImportFileResponse(System.Xml.XmlDocument,NSI.Entities.ImportedFileResultBase,System.Collections.Generic.List{NSI.Entities.ArtefactIdentity})">
            <summary>
            Take all response message of import
            </summary>
            <param name=""></param>
            <returns>Resturn a result off all item try to imported</returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.Sdmx21Connector.PopolateAnnotationID(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
            popolate all Annotation of the Item in SdmxObjects
            </summary>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.Sdmx21Connector.FinalArtefactExists(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
            Check if item in FinalStatus
            </summary>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="M:EndpointConnectors.Connectors.Sdmx21Connector.FilterResultByAgency(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
            Remove all item in SdmxObjects that not belong to the user's agency
            </summary>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="M:Connector.Connectors.Interface.ISdmx21Protocol.ConfigureHttpClient(System.Net.Http.HttpClient,DataModel.NodeConfig)">
            <summary>
            Configures an http Client.
            </summary>
            <param name="httpClient">The client to be configured.</param>
            <param name="nodeConfiguration">The node cofiguration to whom the node must connect.</param>
        </member>
        <member name="M:Connector.Connectors.Interface.ISdmx21Protocol.GetArtefacts(Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureEnumType,System.String,System.String,System.String,Org.Sdmxsource.Sdmx.Api.Constants.StructureReferenceDetailEnumType)">
            <summary>
            Gets an artefact from the MSDB.
            </summary>
            <param name="artefact">Artefact type.</param>
            <param name="id">Artefact id.</param>
            <param name="agencyID">Artefact agency.</param>
            <param name="version">Artefact version.</param>
            <param name="refDetail">Reference detail: eg. None, Children, Parents (default = None).</param>
            <returns></returns>
        </member>
        <member name="M:Connector.Connectors.Interface.ISdmx21Protocol.CreateArtefacts(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean)">
            <summary>
            Creates new artefacts in the MSDB from the ISdmxObjectes given. (or update if exist)
            </summary>
            <param name="objs">SdmxObject containing the SDMX artefacts to be created.</param>
            <returns></returns>
        </member>
        <member name="M:Connector.Connectors.Interface.ISdmx21Protocol.UpdateArtefacts(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean)">
            <summary>
            Updates artefacts in the MSDB from the ISdmxObjectes given. (or create if not exist)
            </summary>
            <param name="objs">SdmxObject containing the SDMX artefacts to be updated.</param>
            <returns></returns>
        </member>
        <member name="M:Connector.Connectors.Interface.ISdmx21Protocol.DeleteArtefact(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean)">
            <summary>
            Deletes artefacts from the MSDB.
            </summary>
            <param name="objs">SdmxObject containing the SDMX artefacts to be deleted.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Connector.Connectors.Interface.ISdmx21Protocol.GetNsiImportFileResponse(System.Xml.XmlDocument,NSI.Entities.ImportedFileResultBase,System.Collections.Generic.List{NSI.Entities.ArtefactIdentity})" -->
        <member name="M:Connector.Connectors.Interface.ISdmx21Protocol.ParseNsiErrorMessages(System.Xml.XmlDocument)">
            <summary>
              Parses SDMX WS's response to see if any exception message exists.
              If so, tries to parse them and throws an exception.
            </summary>
            <param name="response">XmlDocument contenente la risposta del WS</param>
        </member>
        <member name="M:Connector.Connectors.Sdmx21RESTConnector.ConfigureHttpClient(System.Net.Http.HttpClient,DataModel.NodeConfig)">
            <summary>
            Configure HttpClient
            </summary>
            <param name=""></param>
            <returns>Path of file</returns>
        </member>
        <member name="M:Connector.Connectors.Sdmx21SOAPConnector.ConfigureHttpClient(System.Net.Http.HttpClient,DataModel.NodeConfig)">
            <summary>
            Configure HttpClient
            </summary>
            <param name=""></param>
            <returns>Path of file</returns>
        </member>
        <member name="M:Connector.Connectors.Sdmx21SOAPConnector.ParseWSDL(System.Net.Http.HttpClient)">
            <summary>
            Read WSDL and set a Namespace in Endpoint configuration
            </summary>
            <param name=""></param>
            <returns>Path of file</returns>
        </member>
        <member name="M:Connector.Connectors.Sdmx21SOAPConnector.GetQuerySoapAction(Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureEnumType)">
            <summary>
            Returns SoapAction associated to each type of artefact.
            </summary>
            <param name="artefactType"></param>
            <returns></returns>
        </member>
        <member name="M:Connector.Connectors.Sdmx21SOAPConnector.CreateSoapRequest(System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Creates a request setting the proper header.
            </summary>
            <param name="url"></param>
            <param name="action"></param>
            <param name="soapEnvelopeXml"></param>
            <returns></returns>
        </member>
    </members>
</doc>
