<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DataStore.Base</name>
    </assembly>
    <members>
        <member name="F:DataStore.Base.BaseDataStore.mTableDefDict">
            <summary>
            Dizionario statico col le definition delle tabelle
            </summary>
        </member>
        <member name="P:DataStore.Base.BaseDataStore.IDField">
            <summary>
            Restituisce il nome del campo che costituisce la chiave primaria (ad es. IDGIS, RG_COD etc.)
            </summary>
        </member>
        <member name="P:DataStore.Base.BaseDataStore.Database">
            <summary>
            Restituisce il database di default della connessione.
            </summary>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.UCaseExpressionNCS(System.String)">
            <summary>
            Restituisce l'Uppercase di un espressione da usare in una query non case sensitive
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Avvia una transazione.
            </summary>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.CommitTransaction">
            <summary>
            Salva una transazione.
            </summary>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.RollbackTransaction">
            <summary>
            Annulla una transazione.
            </summary>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.ExecuteStoreProcedure(System.String,DataStore.Interface.STKeyValuePair[])">
            <summary>
            Esegue una store procedure con dei parametri
            </summary>
            <param name="spName"></param>
            <param name="spParams"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.ExecuteReader(System.String,DataStore.Interface.STKeyValuePair[],System.Int32,System.Data.IDbTransaction,System.Data.CommandBehavior)">
            <summary>
            Esegue il reader e lascia la connessione aperta, che deve essere chiusa Dopo!
            </summary>
            <param name="cmdTxt"></param>
            <param name="parameters"></param>
            <param name="timeout"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.WriteBulk(System.String,System.Data.DataRow[],System.Nullable{System.Int32})">
            <summary>
            Effettua una bulk copy.
            </summary>
            <param name="destTableName"></param>
            <param name="rowsToWrite"></param>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.GetTableScript(System.Data.DataTable,System.String,System.Boolean,System.Boolean)">
            <summary>
            Restituisce lo script di creazione della tabella a partire dal DataTable indicato.
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.GetCreateTableFromSelectScript(System.String,System.String)">
            <summary>
            Restituisce lo script per creare una tabella direttamente da una query
            </summary>
            <param name="tableName"></param>
            <param name="select"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.GetParseDateExpression(System.String,System.String)">
            <summary>
            Restituisce l'espressione per fare il parse di una data secondo un certo formato.
            </summary>
            <param name="dateExpr"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.GetTmpTableName(System.String)">
            <summary>
            Restituisce un nome per una tabella temporanea.
            </summary>
            <param name="schema"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.GetCompareCollection(System.Collections.Generic.ICollection{System.Data.DataColumn},System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Restituisce la stringa con i confronti tra le colonne delle due tabelle sorgente e destinatario
            </summary>
            <param name="colArr"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.UpdateChanges(System.Data.DataTable,System.Data.IDbTransaction)">
            <summary>
            Effettua il salvataggio dei dati nel DataTable.
            Esegue le operazionidi Delete/Insert/Update in funzione dello stato delle righe
            Se necessario utilizza operazioni Bulk.
            </summary>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.InsertUpdateData(System.Data.DataTable,System.Data.IDbTransaction)">
            <summary>
            Effettua il salvataggio di una tabella in bulk verificando quali righe inserire e quali aggiornare
            </summary>
            <param name="tbl"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.UpdateChanges(System.Data.DataSet,System.Data.IDbTransaction)">
            <summary>
            Effettua il salvataggio di tutte le tabelle del database 
            Se necessario utilizza operazioni Bulk.
            Esegue le operazionidi Delete/Insert/Update in funzione dello stato delle righe
            Esegue un analisi delle relazioni per determinare l'ordine di aggiornamento
            </summary>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.WriteTempTable(System.Data.DataTable,System.Boolean,System.Boolean)">
            <summary>
            Scrive la tabella indicata in una tabella temporanea. Restituisce il nome della tabella.
            </summary>
            <param name="tbToWrite"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.GetTempTableName">
            <summary>
            Restituisce un nome univoco da utilizzare per la creazione di tabelle temporanee
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.GetTempViewName">
            <summary>
            Restituisce un nome univoco da utilizzare per la creazione di view temporanee.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.ClearExpiredTempTables">
            <summary>
            Cancella le tabelle temporanee non utilizzate da più di un certo tempo
            </summary>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.ClearExpiredTempViews">
            <summary>
            Cancella le view temporanee non utilizzate da più di un certo tempo.
            </summary>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.Dispose">
            <summary>
            IDisposable - implementare
            </summary>
        </member>
        <member name="M:DataStore.Base.BaseDataStore.GetTopNRowsQuery(System.String,System.Int32)">
            <summary>
            Restituisce la query per ottenere le prime N righe a partire dal comando passato.
            </summary>
            <param name="cmdTxt"></param>
            <param name="numRows"></param>
            <returns></returns>
        </member>
        <member name="F:DataStore.Base.SqlBulkAdapter.mConn">
            <summary>
            La connessione utilizzata dall'adapter
            </summary>
        </member>
        <member name="F:DataStore.Base.SqlBulkAdapter.mTrans">
            <summary>
            Transazione dentro la quale eseguire le operazioni
            </summary>
        </member>
        <member name="F:DataStore.Base.SqlBulkAdapter.mTb">
            <summary>
            La tabella da inviare al server
            </summary>
        </member>
        <member name="F:DataStore.Base.SqlBulkAdapter.mDestTblName">
            <summary>
            Nome della tabella da aggiornare
            </summary>
        </member>
        <member name="F:DataStore.Base.SqlBulkAdapter.tempTblName">
            <summary>
            Nome della tabella tamporanea utilizzata per gli update e i delete
            </summary>
        </member>
        <member name="F:DataStore.Base.SqlBulkAdapter.mError">
            <summary>
            Messaggio di errore
            </summary>
        </member>
        <member name="F:DataStore.Base.SqlBulkAdapter.mException">
            <summary>
            Eccezione
            </summary>
        </member>
        <member name="P:DataStore.Base.SqlBulkAdapter.Error">
            <summary>
            Restituisce il messaggio di errore
            </summary>
        </member>
        <member name="P:DataStore.Base.SqlBulkAdapter.Exception">
            <summary>
            Restituisce l'eccezione
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.ExecInsert(System.Data.DataTable,System.String)">
            <summary>
            Esegue la insert delle righe added della tabella indicata nella tabella di destinazione indicata
            </summary>
            <param name="srcTable"></param>
            <param name="destTblName"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.ExecInsert(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            Esegue la insert delle righe added della tabella indicata nella tabella di destinazione indicata
            </summary>
            <param name="srcTable"></param>
            <param name="destTblName"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.ExecInsert(System.Data.DataTable,System.String,System.Data.DataRow[])">
            <summary>
            Esegue la insert delle righe added della tabella indicata nella tabella di destinazione indicata
            </summary>
            <param name="srcTable"></param>
            <param name="destTblName"></param>
            <param name="insertedRows"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.ExecInsert(System.Data.DataTable,System.String,System.Data.DataRow[],System.Boolean)">
            <summary>
            Esegue la insert delle righe added della tabella indicata nella tabella di destinazione indicata
            </summary>
            <param name="srcTable"></param>
            <param name="destTblName"></param>
            <param name="insertedRows"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.ExecUpdate(System.Data.DataTable,System.String)">
            <summary>
            Esegue la update delle righe modified della tabella indicata nella tabella di destinazione indicata
            </summary>
            <param name="srcTable"></param>
            <param name="destTblName"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.ExecUpdate(System.Data.DataTable,System.String,System.Data.DataRow[])">
            <summary>
            Esegue la update delle righe modified della tabella indicata nella tabella di destinazione indicata
            </summary>
            <param name="srcTable"></param>
            <param name="destTblName"></param>
            <param name="updatedRows"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.ExecInsertUpdate(System.Data.DataTable,System.String)">
            <summary>
            Esegue in banca dati l'inserimento e l'update delle righe di una tabella
            In base alla chiave primaria verrà deciso quali sono le righe da inserire e quali quelle da aggiornare
            </summary>
            <param name="srcTable"></param>
            <param name="destTblName"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.ExecInsertUpdate(System.Data.DataTable,System.String,System.Data.DataRow[])">
            <summary>
            Esegue in banca dati l'inserimento e l'update delle righe di una tabella
            In base alla chiave primaria verrà deciso quali sono le righe da inserire e quali quelle da aggiornare
            </summary>
            <param name="srcTable"></param>
            <param name="destTblName"></param>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.ExecDelete(System.Data.DataTable,System.String)">
            <summary>
            Esegue la delete delle righe deleted della tabella indicata nella tabella di destinazione indicata
            </summary>
            <param name="srcTable"></param>
            <param name="destTblName"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.ExecDelete(System.Data.DataTable,System.String,System.Data.DataRow[])">
            <summary>
            Esegue la delete delle righe deleted della tabella indicata nella tabella di destinazione indicata
            </summary>
            <param name="srcTable"></param>
            <param name="destTblName"></param>
            <param name="deletedRows"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.Update(System.Data.DataTable,System.String)">
            <summary>
            Esegue le insert, update e delete in base al rowstate delle righe della tabella associata all'adapter
            </summary>
            <param name="srcTable">La tabella contenente i dati per l'aggiornamento</param>
            <param name="destTblName">Il nome della tabella da aggiornare</param>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.DoInsert">
            <summary>
            Inserisce in banca dati le righe con row state added
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.DoInsert(System.Data.DataRow[])">
            <summary>
            Inserisce in banca dati le righe con row state added
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.DoInsert(System.Data.DataRow[],System.Boolean)">
            <summary>
            Inserisce in banca dati le righe con row state added
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.DoUpdate">
            <summary>
            Esegue in banca dati l'update delle righe con rows tate modified
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.DoUpdate(System.Data.DataRow[])">
            <summary>
            Esegue in banca dati l'update delle righe con rows tate modified
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.DoInsertUpdate">
            <summary>
            Esegue in banca dati l'inserimento e l'update delle righe di una tabella
            In base alla chiave primaria verrà deciso quali sono le righe da inserire e quali quelle da aggiornare
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.DoInsertUpdate(System.Data.DataRow[])">
            <summary>
            Esegue in banca dati l'inserimento e l'update delle righe di una tabella
            In base alla chiave primaria verrà deciso quali sono le righe da inserire e quali quelle da aggiornare
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.DoDelete">
            <summary>
            Esegue in banca dati la delete delle righe con rows tate deleted
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.DoDelete(System.Data.DataRow[])">
            <summary>
            Esegue in banca dati la delete delle righe con rows tate deleted
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.BulkWriteToServer(DataStore.Interface.IBulkCopy,System.Data.DataRow[])">
            <summary>
            Tasferisce i dati al server. 
            </summary>
            <param name="blk"></param>
            <param name="copyRows"></param>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.CopyDeletedRows">
            <summary>
            Esegue una copia delle righe deleted
            </summary>
            <param name="rowsToCopy"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.CreateTempTable">
            <summary>
            Crea la tabella temporanea
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.ClearTempTable">
            <summary>
            Elimina i dati dalla tabella temporanea
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.DropTempTable">
            <summary>
            Elimina la tabella temporanea
            </summary>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.GetTableCreationScript(System.String)">
            <summary>
            Restituisce lo script di creazione della tabella gestita dall'adapter.
            </summary>
            <param name="tableName">Nome che verrà assegnato alla tabella creata</param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.GetInsertScript(System.String,System.String)">
            <summary>
            Restituisce uno script di inserimento senza il controllo di PK duplicate  rispetto alla tabella di destinazione
            </summary>
            <param name="srcTableName"></param>
            <param name="destTableName"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.GetInsertCheckPkScript(System.String,System.String)">
            <summary>
            Restituisce uno script di inserimento con il controllo di duplicati rispetto alla tabella di destinazione
            </summary>
            <param name="srcTableName"></param>
            <param name="destTableName"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.GetUpdateScript(System.String,System.String)">
            <summary>
            Restituisce il comando di update della tabella di destinazione tramite la tabella sorgente specificata
            </summary>
            <param name="srcTableName"></param>
            <param name="destTableName"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.GetDeleteScript(System.String,System.String)">
            <summary>
            Restituisce lo script per eliminare le righe dalla tabella di destinazione che fanno join con quelle della tabella sorgente
            </summary>
            <param name="srcTableName"></param>
            <param name="destTableName"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.TypeMapping(System.Type)">
            <summary>
            Restituisce il tipo SQL corrispondente al tipo c# indicato.
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.TypeMapping(System.Data.DataColumn)">
            <summary>
            Esegue il mapping tra i principali tipi .NET e quelli SQL
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:DataStore.Base.SqlBulkAdapter.IsKey(System.Data.DataColumn)">
            <summary>
            Indica se una colonna è chiave della tabella a cui appartiene
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
    </members>
</doc>
